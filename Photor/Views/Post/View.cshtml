@using Photor.Core.Models.Post
@using Photor.Extensions
@inject ILikeService likeService;
@inject ICommentService commentService;
@inject ISaveService saveService;
@model ViewPostViewModel

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<div class="text-center">   
            <h1><a asp-action="Account" 
                asp-controller="User"
                asp-route-id="@Model.User.Id">@Model.User.UserName</a>'s post</h1>
    <img referrerpolicy="no-referrer" src="@Model.ImageUrl" style="max-width:50%; max-height:400px;"></img>
    <hr>
    <h2>Post Description:</h2>
    </br>
    @if (String.IsNullOrEmpty(Model.Description) == true)
    {
        <h3>No description</h3>
        <hr>
    }
    else
    {
        <h3>@Model.Description</h3>
        <hr>
    }

    <form>
        <input type="hidden" asp-for="@Model.Id"></input>
        <input type="hidden" asp-for="@Model.ImageUrl"></input>
        <input type="hidden" asp-for="@Model.Description"></input>
        <input type="hidden" asp-for="@Model.User.Id"></input>
        <input type="hidden" asp-for="@Model.User.UserName"></input>
        <div class="text-center mb-3">
            <p style="font-size:50px;">&#128077; @await likeService.GetPostLikesCountAsync(Model.Id)</p>
            @if (await likeService.FindLikeAsync(Model.Id, User.Id()) != null)
            {
                <button asp-action="DeleteLike" asp-controller="Like" asp-route-id="@Model.Id" class="btn btn-primary">Unlike</button>
            }
            else
            {
                <button asp-action="Add" asp-controller="Like" asp-route-id="@Model.Id" class="btn btn-primary">Like</button>
            }
        </div>

        <div class="nav-item dropdown">
                 <div class="dropdown">
                     <button class="btn btn-primary" type="button"
                     data-bs-toggle="dropdown">More &#128317;</button>
                     <ul class="dropdown-menu">
                         @if (User.Id() == Model.User.Id)
                         {
                             <li class="nav-item">
                                 <button asp-action="Edit" asp-controller="Post" asp-route-id="@Model.Id" class="dropdown-item">Edit your post</button>
                                 <button asp-action="Delete" asp-controller="Post" asp-route-id="@Model.Id" class="dropdown-item">Delete your post</button>
                             </li>
                         }
                         @if (await saveService.FindSaveAsync(@Model.Id, User.Id()) == null)
                         {
                             <li class="nav-item">
                                 <button asp-action="Add" asp-controller="Save" asp-route-id="@Model.Id" class="dropdown-item">Save Post</button>
                             </li>
                         }
                         else
                         {
                             <li class="nav-item">
                                 <button asp-action="Delete" asp-controller="Save" asp-route-id="@Model.Id" class="dropdown-item">Unsave Post</button>
                             </li>
                         }
                         <li class="nav-item">
                                 <button asp-action="ReportPost" asp-controller="Report" asp-route-id="@Model.Id" class="dropdown-item">Report Post</button>
                         </li>
                     </ul>
                 </div>
             </div>
        



        <div class="text-center mb-3">
                <label asp-for="@Model.CommentValue">Write your comment here:</label>
                <textarea class="form-control" aria-required="true" asp-for="@Model.CommentValue"></textarea>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="text-center mt-3">
                    <button asp-action="Add" asp-controller="Comment" asp-route-id="@Model.Id" class="btn btn-primary">Add Comment</button>
                </div>
        </div>
    </form>

    @foreach (var comment in await commentService.GetPostCommentsAsync(Model.Id, 1))
    {
        <div class="text-center mb-3">
            <div class="card" style="width: 90%;">
                <div class="card-body">
                    <h5 class="card-title">@comment.User.UserName</h5>
                    <p class="card-text">@comment.Content</p>
                    @if (User.Id() == comment.UserId || User.Id() == comment.Post.UserId)
                    {
                        <form>
                            <button type="submit" asp-action="Delete" asp-controller="Comment" asp-route-id="@comment.Id" class="btn btn-primary">Delete Comment</button>
                        </form>
                    }
                    @if (User.Id() == comment.UserId)
                    {
                        
                       <form>
                            <button type="submit" asp-action="Edit" asp-controller="Comment" asp-route-id="@comment.Id" class="btn btn-primary">Edit Comment</button>
                        </form>
                    }
                </div>
            </div>
        </div>
    }
    <a asp-action="List" style="width:50%;" asp-controller="Comment" asp-route-postId="@Model.Id" class="btn btn-primary">More comments</a>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}