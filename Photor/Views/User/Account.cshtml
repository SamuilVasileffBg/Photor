@using Photor.Core.Models.User
@using Photor.Extensions
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc
@inject UserManager<ApplicationUser> userManager;

@model UserViewModel

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewBag.User = await userManager.FindByIdAsync(Model.Id);
}

<form>
    <div class="text-center">
        <input type="hidden" asp-for="@Model.Id" value="@Model.Id"/>
        <input type="hidden" asp-for="@Model.UserName" value="@Model.UserName"/>
        <input type="hidden" asp-for="@Model.FirstName" value="@Model.FirstName"/>
        <input type="hidden" asp-for="@Model.LastName" value="@Model.LastName"/>
        <img style="width:10%;" referrerpolicy="no-referrer" class="rounded-circle" src="@Model.ImageUrl"></img>

        <h1>@Model.UserName</h1>
        <h2>@Model.FirstName @Model.LastName</h2>
        
        

        @if (User.Id() == Model.Id)
        {
            <div class="nav-item dropdown">
                 <div class="dropdown">
                     <button class="btn btn-primary" type="button"
                     data-bs-toggle="dropdown">This is your account &#128317;</button>
                     <ul class="dropdown-menu">
                         <li class="nav-item">
                             <a class="dropdown-item" asp-action="Add" asp-controller="Post" class="card-link">Add Post</a>
                         </li>
                         <li class="nav-item">
                             <a class="dropdown-item" asp-action="Edit" asp-controller="User" asp-route-id="@Model.Id" asp-route-returnUrl="@ViewBag.ReturnUrl" class="card-link">Edit Account</a>
                         </li>
                         <li class="nav-item">
                             <a class="dropdown-item" asp-action="List" asp-controller="Save" asp-route-id="@Model.Id" class="card-link">Saved Posts</a>
                         </li>
                         <li class="nav-item">
                             <a class="dropdown-item" asp-action="List" asp-controller="Friend" asp-route-id="@Model.Id" class="card-link">My Friends</a>
                         </li>
                         <li class="nav-item">
                             <a class="dropdown-item" asp-action="Invitations" asp-controller="Friend" class="card-link">Received friend invitations</a>
                         </li>
                     </ul>
                 </div>
             </div>
        }
        else if (await friendService.FindUserFriendAsync(User.Id(), Model.Id) != null)
        {
            <div class="nav-item dropdown">
                 <div class="dropdown">
                     <button class="btn btn-primary" type="button"
                     data-bs-toggle="dropdown">&#129303; You are friends &#128317;</button>
                     <ul class="dropdown-menu">
                         <li class="nav-item">
                             <a class="dropdown-item" asp-action="DeleteFriendship" asp-controller="Friend" asp-route-id="@Model.Id" asp-route-returnUrl="@ViewBag.ReturnUrl" class="card-link">Delete friend</a>
                         </li>
                         <li class="nav-item">
                             <a class="dropdown-item" asp-action="List" asp-controller="Friend" asp-route-id="@Model.Id" class="card-link">Friend List</a>
                         </li>
                     </ul>
                 </div>
             </div>
        }
        else if (await friendService.FindFriendInvitationAsync(Model.Id, User.Id()) != null)
        {
            <div class="nav-item dropdown">
                 <div class="dropdown">
                     <button class="btn btn-primary" type="button"
                     data-bs-toggle="dropdown">Sent you a friend invitation &#128317;</button>
                     <ul class="dropdown-menu">
                         <li class="nav-item">
                             <a class="dropdown-item" asp-action="AcceptFriendInvitation" asp-controller="Friend" asp-route-senderId="@Model.Id" asp-route-returnUrl="@ViewBag.ReturnUrl" class="card-link">Accept Invitation</a>
                         </li>
                         <li class="nav-item">
                             <a class="dropdown-item" asp-action="RejectFriendInvitation" asp-controller="Friend" asp-route-senderId="@Model.Id" asp-route-returnUrl="@ViewBag.ReturnUrl" class="card-link">Reject Invitation</a>
                         </li>
                         <li class="nav-item">
                             <a class="dropdown-item" asp-action="List" asp-controller="Friend" asp-route-id="@Model.Id" class="card-link">Friend List</a>
                         </li>
                     </ul>
                 </div>
             </div>
        }
        else if ((await friendService.FindFriendInvitationAsync(User.Id(), Model.Id)) != null)
        {
            <div class="nav-item dropdown">
                 <div class="dropdown">
                     <button class="btn btn-primary" type="button"
                     data-bs-toggle="dropdown">You sent a friend invitation &#128317;</button>
                     <ul class="dropdown-menu">
                         <li class="nav-item">
                             <a class="dropdown-item" asp-action="DeleteFriendInvitation" asp-controller="Friend" asp-route-id="@Model.Id" asp-route-returnUrl="@ViewBag.ReturnUrl" class="card-link">Delete friend invitation</a>
                         </li>
                         <li class="nav-item">
                             <a class="dropdown-item" asp-action="List" asp-controller="Friend" asp-route-id="@Model.Id" class="card-link">Friend List</a>
                         </li>
                     </ul>
                 </div>
             </div>
            
        }
        else
        {
            <div class="nav-item dropdown">
                 <div class="dropdown">
                     <button class="btn btn-primary" type="button"
                     data-bs-toggle="dropdown">You aren't friends &#128317;</button>
                     <ul class="dropdown-menu">
                         <li class="nav-item">
                             <a class="dropdown-item" asp-action="SendFriendInvitation" asp-controller="Friend" asp-route-receiverId="@Model.Id" asp-route-returnUrl="@ViewBag.ReturnUrl" class="card-link">Send friend invitation</a>
                         </li>
                         <li class="nav-item">
                             <a class="dropdown-item" asp-action="List" asp-controller="Friend" asp-route-id="@Model.Id" class="card-link">Friend List</a>
                         </li>
                     </ul>
                 </div>
             </div>
        }
        @if (User.IsInRole("Administrator") && await userManager.IsInRoleAsync(ViewBag.User, "Administrator") == false)
        {
            @if (await userManager.IsInRoleAsync(ViewBag.User, "Moderator"))
            {
                <a asp-action="Remove" asp-controller="Moderator" asp-area="Administrator" asp-route-id="@Model.Id" asp-route-returnUrl="@ViewBag.returnUrl" class="btn btn-danger mt-1">Remove from moderator role</a>
            }
            else
            {
                <a asp-action="Become" asp-controller="Moderator" asp-area="Administrator" asp-route-id="@Model.Id" asp-route-returnUrl="@ViewBag.returnUrl" class="btn btn-success mt-1">Add to moderator role</a>
            }
        }

        <hr />

        @if (@Model.Description != null)
        {
            <p>@Model.Description</p>
            <hr />
        }

        @*@if ((Model?.Posts?.Count ?? 0) == 0)
        {
            <h2 class="mt-5">No posts available</h2>
        }
        else
        {
            <div class="text-center row">
                @foreach (var post in Model.Posts)
                {
                    <partial name="_PostPreviewPartial" model="@post"/>
                }
            </div>
        }*@

    </div>
</form>

<partial name="_PostPaginationPartial" model="@ViewBag.PaginationModel"/>